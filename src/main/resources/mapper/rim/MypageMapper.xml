<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.test.dao.rim.ApplicationDao">



    <!-- 지원 현황 통계 조회 -->

    <select id="selectApplicationStats" resultType="com.example.test.dto.rim.mypage.ApplicationStatusDTO$ApplicationStats">

        SELECT 

            COUNT(*) as total,

            SUM(CASE WHEN ah.passYn = 'W' THEN 1 ELSE 0 END) as inProgress,

            SUM(CASE WHEN ah.passYn = 'Y' THEN 1 ELSE 0 END) as pass,

            SUM(CASE WHEN ah.passYn = 'N' THEN 1 ELSE 0 END) as fail

        FROM tblAplcHstr ah

        JOIN tblResume r ON ah.resumeNo = r.resumeNo

        WHERE r.userId = #{userId}

    </select>



    <!-- 지원 내역 목록 조회 -->

    <select id="selectApplicationList" resultType="com.example.test.dto.rim.mypage.ApplicationStatusDTO$ApplicationDetail">

        SELECT 

            ah.jobPostNo as applicationId,

            c.companyId,

            c.companyName,

            jp.title as jobTitle,

            CASE 

                WHEN ah.passYn = 'W' THEN 'WAITING'

                WHEN ah.passYn = 'Y' THEN 'PASS'

                WHEN ah.passYn = 'N' THEN 'FAIL'

            END as status,

            ah.aplcHstrDate as appliedDate,

            CASE WHEN cs.userId IS NOT NULL THEN true ELSE false END as hasScore,

            cs.score as score

        FROM tblAplcHstr ah

        JOIN tblResume r ON ah.resumeNo = r.resumeNo

        JOIN tblJobPost jp ON ah.jobPostNo = jp.jobPostNo

        JOIN tblCompany c ON jp.companyId = c.companyId

        LEFT JOIN tblCompanyScore cs ON cs.companyId = c.companyId 

            AND cs.userId = r.userId

        WHERE r.userId = #{userId}

        ORDER BY ah.aplcHstrDate DESC

    </select>



    <!-- 평점 존재 여부 확인 -->

    <select id="existsScore" resultType="boolean">

        SELECT EXISTS (

            SELECT 1 

            FROM tblCompanyScore 

            WHERE userId = #{userId} 

            AND companyId = #{companyId}

        )

    </select>



    <!-- 평점 등록 -->

    <insert id="insertScore">

        INSERT INTO tblCompanyScore (

            userId,

            companyId,

            score,

            scoreDate

        ) VALUES (

            #{userId},

            #{companyId},

            #{score},

            NOW()

        )

    </insert>



    <!-- 평점 삭제 -->

    <delete id="deleteScore">

        DELETE FROM tblCompanyScore 

        WHERE userId = #{userId} 

        AND companyId = #{companyId}

    </delete>



    <!-- 평점 수정 -->

    <update id="updateScore">

        UPDATE tblCompanyScore 

        SET score = #{score},

            scoreDate = NOW()

        WHERE userId = #{userId} 

        AND companyId = #{companyId}

    </update>



</mapper> 
