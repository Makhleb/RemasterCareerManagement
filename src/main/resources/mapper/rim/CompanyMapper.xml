<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.test.dao.rim.CompanyDao">

    <select id="findById" parameterType="string" resultType="com.example.test.dto.CompanyDTO">
        SELECT *
        FROM tblCompany
        WHERE companyId = #{companyId}
    </select>

    <select id="existsById" parameterType="string" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM tblCompany
        WHERE companyId = #{companyId}
    </select>

    <select id="existsByEmail" parameterType="string" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM tblCompany
        WHERE companyEmail = #{email}
    </select>

    <select id="existsByNumber" parameterType="string" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM tblCompany
        WHERE companyNumber = #{number}
    </select>

    <insert id="save" parameterType="com.example.test.dto.rim.CompanyCreateDTO">
        INSERT INTO tblCompany (
            companyId,
            companyPw,
            companyName,
            companyNumber,
            companyAddress,
            companyZonecode,
            companyAddressDetail,
            companyContact,
            companyEmail,
            companyWebsite,
            companyBirth,
            companyEmployee,
            companyProfit,
            companyRole,
            companyIsActive
        ) VALUES (
            #{companyId},
            #{companyPw},
            #{companyName},
            #{companyNumber},
            #{companyAddress},
            #{companyZonecode},
            #{companyAddressDetail},
            #{companyContact},
            #{companyEmail},
            #{companyWebsite},
            #{companyBirth},
            #{companyEmployee},
            #{companyProfit},
            'ROLE_COMPANY',
            'Y'
        )
    </insert>

    <!-- TOP 10 기업 (별점 기준) -->
    <select id="findTopCompaniesByRating" resultType="map">
        SELECT c.*, AVG(cs.score) as avg_rating,
               COUNT(cs.userId) as review_count
        FROM tblCompany c
        LEFT JOIN tblCompanyScore cs ON c.companyId = cs.companyId
        GROUP BY c.companyId
        HAVING review_count > 0
        ORDER BY avg_rating DESC
        LIMIT 10
    </select>

</mapper> 